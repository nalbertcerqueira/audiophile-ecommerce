@use "../1-base/variables" as vars;
@use "../1-base/mixins" as mixins;
@use "../1-base/placeholders";

.category {
    position: relative;
    background-color: vars.$very-light-grey;
    border-radius: 0.5rem;
    padding: 0 2rem 2rem;

    &:hover {
        .category__thumb {
            transform: translateY(-1rem);
        }
        .category__thumb-container::before {
            width: 110%;
        }
    }

    &__info {
        @include mixins.flex($gap: 1rem, $items: center, $direction: column);
        margin-top: 116px;
    }

    &__thumb-container {
        @include mixins.flex($items: center);
        position: absolute;
        top: -50%;
        left: 50%;
        height: 100%;
        max-width: 125px;
        transform: translateX(-50%);

        &::before {
            content: "";
            position: absolute;
            top: 83%;
            width: 100%;
            height: 1.125rem;
            border-radius: 50%;
            background-color: vars.$black;
            transform: translateY(-10%);
            filter: blur(20px);
            transition: width vars.$transition-duration;
        }
    }

    &__thumb {
        position: relative;
        height: fit-content;
        width: 100%;
        object-fit: contain;
        transition: transform vars.$transition-duration;
    }

    &__name {
        font-size: vars.$h6-font-size;
        letter-spacing: vars.$h6-letter-spacing;
        line-height: 1em;
        font-weight: 700;
    }

    &__link {
        @extend %subtitle;
        @include mixins.flex($gap: 0.8125rem);
        color: rgba(vars.$black, 0.5);
        transition: color vars.$transition-duration;
        padding: 0.25rem 0.5rem;

        &:hover {
            color: vars.$default-orange;

            .category__arrow-icon {
                transform: translateX(0.5rem);
            }
        }
    }

    &__arrow-icon {
        transition: transform vars.$transition-duration;
    }
}
